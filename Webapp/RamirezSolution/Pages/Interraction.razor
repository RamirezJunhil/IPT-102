@page "/Interaction"

<h3 class="header-text">CREATE READ UPDATE DELETE METHOD</h3>

@code {
    private int ID { get; set; }
    private string Name { get; set; } = string.Empty;
    private int Age { get; set; }
    private string School { get; set; } = string.Empty;
    private string Email { get; set; } = string.Empty;
    private string Address { get; set; } = string.Empty;

    private string ErrorMessage { get; set; } = string.Empty;

    private List<UserProfile> userProfiles = new List<UserProfile>();
    private bool isEditMode = false;
    private int editID = -1;

    private void SaveProfile()
    {
        if (string.IsNullOrWhiteSpace(Name) ||
            Age <= 0 ||
            string.IsNullOrWhiteSpace(School) ||
            string.IsNullOrWhiteSpace(Email) ||
            !IsValidEmail(Email) ||
            string.IsNullOrWhiteSpace(Address))
        {
            ErrorMessage = "All fields are required, and the email must be valid.";
            return;
        }

        if (isEditMode)
        {
            var profile = userProfiles.FirstOrDefault(p => p.ID == editID);
            if (profile != null)
            {
                profile.Name = Name;
                profile.Age = Age;
                profile.School = School;
                profile.Email = Email;
                profile.Address = Address;
            }
            isEditMode = false;
            editID = -1;
        }
        else
        {
            var newProfile = new UserProfile
                {
                    ID = userProfiles.Count > 0 ? userProfiles.Max(p => p.ID) + 1 : 1,
                    Name = Name,
                    Age = Age,
                    School = School,
                    Email = Email,
                    Address = Address
                };
            userProfiles.Add(newProfile);
        }

        ClearForm();
        ErrorMessage = string.Empty;
    }

    private void EditProfile(int id)
    {
        var profile = userProfiles.FirstOrDefault(p => p.ID == id);
        if (profile != null)
        {
            ID = profile.ID;
            Name = profile.Name;
            Age = profile.Age;
            School = profile.School;
            Email = profile.Email;
            Address = profile.Address;
            isEditMode = true;
            editID = id;
        }
    }

    private void DeleteProfile(int id)
    {
        var profile = userProfiles.FirstOrDefault(p => p.ID == id);
        if (profile != null)
        {
            userProfiles.Remove(profile);
        }
    }

    private void ClearForm()
    {
        ID = 0;
        Name = string.Empty;
        Age = 0;
        School = string.Empty;
        Email = string.Empty;
        Address = string.Empty;
        ErrorMessage = string.Empty;
    }

    private bool IsValidEmail(string email)
    {
        return email.Contains("@") && email.Contains(".") && email.IndexOf('@') < email.LastIndexOf('.');
    }

    private class UserProfile
    {
        public int ID { get; set; }
        public string Name { get; set; }
        public int Age { get; set; }
        public string School { get; set; }
        public string Email { get; set; }
        public string Address { get; set; }
    }
}

<style>
    .table-background {
        background-color: #f8f9fa; /* Example background color */
    }
</style>

<div class="form-container">
    <div class="form-group">
        <label>ID</label>
        <input type="text" class="form-control" @bind="@ID" disabled />
    </div>
    <div class="form-group">
        <label>Name</label>
        <input type="text" class="form-control" @bind="@Name" />
    </div>
    <div class="form-group">
        <label>Age</label>
        <input type="number" class="form-control" @bind="@Age" />
    </div>
    <div class="form-group">
        <label>School</label>
        <input type="text" class="form-control" @bind="@School" />
    </div>
    <div class="form-group">
        <label>Email</label>
        <input type="email" class="form-control" placeholder="user@example.com" @bind="@Email" />
    </div>
    <div class="form-group">
        <label>Address</label>
        <input type="text" class="form-control" @bind="@Address" />
    </div>
    @if (!string.IsNullOrEmpty(ErrorMessage))
    {
        <div class="alert alert-danger">@ErrorMessage</div>
    }
    <div class="button-container">
        <button class="btn btn-primary" @onclick="SaveProfile">@(isEditMode ? "Update" : "Create")</button>
        <button class="btn btn-secondary" @onclick="ClearForm">Clear</button>
    </div>
</div>

<h3 class="header-text">PROFILES</h3>
<table class="table table-striped table-bordered table-background">
    <thead>
        <tr>
            <th>ID</th>
            <th>Name</th>
            <th>Age</th>
            <th>School</th>
            <th>Email</th>
            <th>Address</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var profile in userProfiles)
        {
            <tr>
                <td>@profile.ID</td>
                <td>@profile.Name</td>
                <td>@profile.Age</td>
                <td>@profile.School</td>
                <td>@profile.Email</td>
                <td>@profile.Address</td>
                <td>
                    <button class="btn btn-warning btn-sm" @onclick="() => EditProfile(profile.ID)">UPDATE</button>
                    <button class="btn btn-danger btn-sm" @onclick="() => DeleteProfile(profile.ID)">DELETE</button>
                </td>
            </tr>
        }
    </tbody>
</table>
