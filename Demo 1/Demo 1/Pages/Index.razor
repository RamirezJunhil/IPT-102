@page "/Book-Page"

<!-- Input form for adding new books -->
<div class="form-group">
    <label>Title</label>
    <input @bind="book.Title" class="form-control" />
    <label>Borrower</label>
    <input @bind="book.Borrower" class="form-control" />
</div>
<div class="form-group">
    <button @onclick="AddBook" class="btn btn-primary">Add</button> <!-- Add button to add new books -->
</div>

<!-- Display table if there are any books -->
@if (books.Any())
{
    <table class="table table-striped table-hover mt-3">
        <thead class="thead-dark">
            <tr>
                <th>Book ID</th>
                <th>Title</th>
                <th>Borrower</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var book in books)
            {
                <tr>
                    <td>@book.BookID</td>
                    <td>
                        <!-- Input field for editing book title -->
                        @if (editingBook?.BookID == book.BookID)
                        {
                            <input @bind="book.Title" class="form-control" />
                        }
                        else
                        {
                            @book.Title
                        }
                    </td>
                    <td>
                        <!-- Input field for editing book borrower -->
                        @if (editingBook?.BookID == book.BookID)
                        {
                            <input @bind="book.Borrower" class="form-control" />
                        }
                        else
                        {
                            @book.Borrower
                        }
                    </td>
                    <td>
                        <!-- Buttons for save, cancel, edit, and delete actions -->
                        @if (editingBook?.BookID == book.BookID)
                        {
                            <button @onclick="SaveEdit" class="btn btn-primary btn-sm">Save</button>
                            <button @onclick="CancelEdit" class="btn btn-secondary btn-sm">Cancel</button>
                        }
                        else
                        {
                            <button @onclick="() => EditBook(book)" class="btn btn-info btn-sm">Edit</button>
                            <button @onclick="() => DeleteBook(book.BookID)" class="btn btn-danger btn-sm">Delete</button>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private BookModel book = new(); // New book model for input fields
    private List<BookModel> books = new(); // List of books
    private BookModel? editingBook; // Currently editing book

    // Method to add a new book
    private void AddBook()
    {
        var newBook = new BookModel
            {
                Title = book.Title,
                Borrower = book.Borrower
            };
        books.Add(newBook);
        UpdateBookIds();
        book = new BookModel(); // Clear the input fields
    }

    // Method to set the book to be edited
    private void EditBook(BookModel bookToEdit)
    {
        editingBook = bookToEdit;
    }

    // Method to save edits
    private void SaveEdit()
    {
        editingBook = null;
    }

    // Method to cancel edits
    private void CancelEdit()
    {
        editingBook = null;
    }

    // Method to delete a book
    private void DeleteBook(int bookId)
    {
        var bookToDelete = books.FirstOrDefault(b => b.BookID == bookId);
        if (bookToDelete != null)
        {
            books.Remove(bookToDelete);
            UpdateBookIds();
        }
    }

    // Method to update book IDs to keep them sequential
    private void UpdateBookIds()
    {
        for (int i = 0; i < books.Count; i++)
        {
            books[i].BookID = i + 1;
        }
    }

    // Book model class
    private class BookModel
    {
        public int BookID { get; set; }
        public string Title { get; set; } = string.Empty;
        public string Borrower { get; set; } = string.Empty;
    }
}
